services:
  # Database Migration Service
  migrate:
    build: .
    environment:
      - DATABASE_URL=postgresql://kreeda_user:kreeda_pass@postgres:5432/kreeda_db
    depends_on:
      postgres:
        condition: service_healthy
    command: sh -c "alembic upgrade head"
    restart: "no"

  # Kreeda Backend API
  api:
    build: .
    ports:
      - "8000:8000"
    environment:
      - DATABASE_URL=postgresql://kreeda_user:kreeda_pass@postgres:5432/kreeda_db
      - REDIS_URL=redis://redis:6379
      - DEBUG=true
    depends_on:
      migrate:
        condition: service_completed_successfully
      postgres:
        condition: service_healthy
      redis:
        condition: service_started
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

  # PostgreSQL Database
  postgres:
    image: postgres:15
    environment:
      - POSTGRES_USER=kreeda_user
      - POSTGRES_PASSWORD=kreeda_pass
      - POSTGRES_DB=kreeda_db
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./init.sql:/docker-entrypoint-initdb.d/init.sql
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U kreeda_user -d kreeda_db"]
      interval: 10s
      timeout: 5s
      retries: 5

  # Redis for caching and WebSocket management
  redis:
    image: redis:7-alpine
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data

  # pgAdmin for database management (optional)
  pgadmin:
    image: dpage/pgadmin4
    environment:
      - PGADMIN_DEFAULT_EMAIL=admin@kreeda.app
      - PGADMIN_DEFAULT_PASSWORD=admin123
    ports:
      - "5050:80"
    depends_on:
      - postgres

volumes:
  postgres_data:
  redis_data:
